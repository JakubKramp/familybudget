# ==== poetry ====
[tool.poetry]
name = "familybudget"
version = "0.1.0"
description = "Recruitment task for Kelton Europe"
authors = ["Jakub <jakramp96@gmail.com>"]
readme = "README.md"

[tool.poetry.group.base.dependencies]
python = "3.11"
Django = "^5.0.7"
django-environ==0.11.2  # https://github.com/joke2k/django-environ
django-model-utils==4.5.1  # https://github.com/jazzband/django-model-utils
django-allauth[mfa]==0.63.6  # https://github.com/pennersr/django-allauth
djangorestframework==3.15.2  # https://github.com/encode/django-rest-framework
django-cors-headers==4.4.0  # https://github.com/adamchainz/django-cors-headers
drf-spectacular==0.27.2  # https://github.com/tfranzel/drf-spectacular

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
python = "3.11"
pytest = "^6.2.5"
mypy==1.10.0  # https://github.com/python/mypy
ruff==0.5.2  # https://github.com/astral-sh/ruff
coverage==7.6.0  # https://github.com/nedbat/coveragepy
pre-commit==3.7.1  # https://github.com/pre-commit/pre-commit
factory-boy==3.3.0  # https://github.com/FactoryBoy/factory_boy
django-debug-toolbar==4.4.6  # https://github.com/jazzband/django-debug-toolbar
django-extensions==3.2.3  # https://github.com/django-extensions/django-extensions
django-coverage-plugin==3.1.0  # https://github.com/nedbat/django_coverage_plugin
pytest-django==4.8.0  # https://github.com/pytest-dev/pytest-django

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = [
    "tests.py",
    "test_*.py",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["family_budget/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins =["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*"
]
# Same as Django: https://github.com/cookiecutter/cookiecutter-django/issues/4792.
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  # "ARG", # Unused function argument
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  # "NPY",
  # "AIR",
  "PERF",
  # "FURB",
  # "LOG",
  "RUF"
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "UP038" # Checks for uses of isinstance/issubclass that take a tuple
          # of types for comparison.
          # Deactivated because it can make the code slow:
          # https://github.com/astral-sh/ruff/issues/7871
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    "UP038"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true